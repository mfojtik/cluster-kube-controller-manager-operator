// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/cluster-kube-controller-manager-operator/pkg/apis/kubecontrollermanager/v1alpha1"
	scheme "github.com/openshift/cluster-kube-controller-manager-operator/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// KubeControllerManagerOperatorConfigsGetter has a method to return a KubeControllerManagerOperatorConfigInterface.
// A group's client should implement this interface.
type KubeControllerManagerOperatorConfigsGetter interface {
	KubeControllerManagerOperatorConfigs() KubeControllerManagerOperatorConfigInterface
}

// KubeControllerManagerOperatorConfigInterface has methods to work with KubeControllerManagerOperatorConfig resources.
type KubeControllerManagerOperatorConfigInterface interface {
	Create(*v1alpha1.KubeControllerManagerOperatorConfig) (*v1alpha1.KubeControllerManagerOperatorConfig, error)
	Update(*v1alpha1.KubeControllerManagerOperatorConfig) (*v1alpha1.KubeControllerManagerOperatorConfig, error)
	UpdateStatus(*v1alpha1.KubeControllerManagerOperatorConfig) (*v1alpha1.KubeControllerManagerOperatorConfig, error)
	Delete(name string, options *v1.DeleteOptions) error
	DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error
	Get(name string, options v1.GetOptions) (*v1alpha1.KubeControllerManagerOperatorConfig, error)
	List(opts v1.ListOptions) (*v1alpha1.KubeControllerManagerOperatorConfigList, error)
	Watch(opts v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.KubeControllerManagerOperatorConfig, err error)
	KubeControllerManagerOperatorConfigExpansion
}

// kubeControllerManagerOperatorConfigs implements KubeControllerManagerOperatorConfigInterface
type kubeControllerManagerOperatorConfigs struct {
	client rest.Interface
}

// newKubeControllerManagerOperatorConfigs returns a KubeControllerManagerOperatorConfigs
func newKubeControllerManagerOperatorConfigs(c *KubecontrollermanagerV1alpha1Client) *kubeControllerManagerOperatorConfigs {
	return &kubeControllerManagerOperatorConfigs{
		client: c.RESTClient(),
	}
}

// Get takes name of the kubeControllerManagerOperatorConfig, and returns the corresponding kubeControllerManagerOperatorConfig object, and an error if there is any.
func (c *kubeControllerManagerOperatorConfigs) Get(name string, options v1.GetOptions) (result *v1alpha1.KubeControllerManagerOperatorConfig, err error) {
	result = &v1alpha1.KubeControllerManagerOperatorConfig{}
	err = c.client.Get().
		Resource("kubecontrollermanageroperatorconfigs").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of KubeControllerManagerOperatorConfigs that match those selectors.
func (c *kubeControllerManagerOperatorConfigs) List(opts v1.ListOptions) (result *v1alpha1.KubeControllerManagerOperatorConfigList, err error) {
	result = &v1alpha1.KubeControllerManagerOperatorConfigList{}
	err = c.client.Get().
		Resource("kubecontrollermanageroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested kubeControllerManagerOperatorConfigs.
func (c *kubeControllerManagerOperatorConfigs) Watch(opts v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Resource("kubecontrollermanageroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a kubeControllerManagerOperatorConfig and creates it.  Returns the server's representation of the kubeControllerManagerOperatorConfig, and an error, if there is any.
func (c *kubeControllerManagerOperatorConfigs) Create(kubeControllerManagerOperatorConfig *v1alpha1.KubeControllerManagerOperatorConfig) (result *v1alpha1.KubeControllerManagerOperatorConfig, err error) {
	result = &v1alpha1.KubeControllerManagerOperatorConfig{}
	err = c.client.Post().
		Resource("kubecontrollermanageroperatorconfigs").
		Body(kubeControllerManagerOperatorConfig).
		Do().
		Into(result)
	return
}

// Update takes the representation of a kubeControllerManagerOperatorConfig and updates it. Returns the server's representation of the kubeControllerManagerOperatorConfig, and an error, if there is any.
func (c *kubeControllerManagerOperatorConfigs) Update(kubeControllerManagerOperatorConfig *v1alpha1.KubeControllerManagerOperatorConfig) (result *v1alpha1.KubeControllerManagerOperatorConfig, err error) {
	result = &v1alpha1.KubeControllerManagerOperatorConfig{}
	err = c.client.Put().
		Resource("kubecontrollermanageroperatorconfigs").
		Name(kubeControllerManagerOperatorConfig.Name).
		Body(kubeControllerManagerOperatorConfig).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *kubeControllerManagerOperatorConfigs) UpdateStatus(kubeControllerManagerOperatorConfig *v1alpha1.KubeControllerManagerOperatorConfig) (result *v1alpha1.KubeControllerManagerOperatorConfig, err error) {
	result = &v1alpha1.KubeControllerManagerOperatorConfig{}
	err = c.client.Put().
		Resource("kubecontrollermanageroperatorconfigs").
		Name(kubeControllerManagerOperatorConfig.Name).
		SubResource("status").
		Body(kubeControllerManagerOperatorConfig).
		Do().
		Into(result)
	return
}

// Delete takes name of the kubeControllerManagerOperatorConfig and deletes it. Returns an error if one occurs.
func (c *kubeControllerManagerOperatorConfigs) Delete(name string, options *v1.DeleteOptions) error {
	return c.client.Delete().
		Resource("kubecontrollermanageroperatorconfigs").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *kubeControllerManagerOperatorConfigs) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	return c.client.Delete().
		Resource("kubecontrollermanageroperatorconfigs").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched kubeControllerManagerOperatorConfig.
func (c *kubeControllerManagerOperatorConfigs) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.KubeControllerManagerOperatorConfig, err error) {
	result = &v1alpha1.KubeControllerManagerOperatorConfig{}
	err = c.client.Patch(pt).
		Resource("kubecontrollermanageroperatorconfigs").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
