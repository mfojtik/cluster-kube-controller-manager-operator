// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/cluster-kube-controller-manager-operator/pkg/apis/kubecontrollermanager/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KubeControllerManagerOperatorConfigLister helps list KubeControllerManagerOperatorConfigs.
type KubeControllerManagerOperatorConfigLister interface {
	// List lists all KubeControllerManagerOperatorConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KubeControllerManagerOperatorConfig, err error)
	// Get retrieves the KubeControllerManagerOperatorConfig from the index for a given name.
	Get(name string) (*v1alpha1.KubeControllerManagerOperatorConfig, error)
	KubeControllerManagerOperatorConfigListerExpansion
}

// kubeControllerManagerOperatorConfigLister implements the KubeControllerManagerOperatorConfigLister interface.
type kubeControllerManagerOperatorConfigLister struct {
	indexer cache.Indexer
}

// NewKubeControllerManagerOperatorConfigLister returns a new KubeControllerManagerOperatorConfigLister.
func NewKubeControllerManagerOperatorConfigLister(indexer cache.Indexer) KubeControllerManagerOperatorConfigLister {
	return &kubeControllerManagerOperatorConfigLister{indexer: indexer}
}

// List lists all KubeControllerManagerOperatorConfigs in the indexer.
func (s *kubeControllerManagerOperatorConfigLister) List(selector labels.Selector) (ret []*v1alpha1.KubeControllerManagerOperatorConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KubeControllerManagerOperatorConfig))
	})
	return ret, err
}

// Get retrieves the KubeControllerManagerOperatorConfig from the index for a given name.
func (s *kubeControllerManagerOperatorConfigLister) Get(name string) (*v1alpha1.KubeControllerManagerOperatorConfig, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kubecontrollermanageroperatorconfig"), name)
	}
	return obj.(*v1alpha1.KubeControllerManagerOperatorConfig), nil
}
